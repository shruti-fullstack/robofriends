{"version":3,"sources":["Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBounday","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobot","filter","user","name","toLowerCase","includes","length","ErrorBoundary","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mOAuBeA,EApBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,UCaLC,EAhBG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAY,mCACZC,KAAK,SACLC,YAAa,gBACbC,SAAUJ,OCOPK,G,MAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,aCQEC,E,kDAhBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAMnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,6DAEFG,KAAKX,MAAMK,a,GAdKQ,aCkDZC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAM9B,WAAU,IAAD,OACDC,EAAgBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAACC,GAC9C,OAAOA,EAAKC,KACTC,cACAC,SAAS,EAAKvB,MAAMU,YAAYY,kBAErC,OAAiC,IAA7BlB,KAAKJ,MAAMhB,OAAOwC,OACb,6CAGL,sBAAKpC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,sBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAACiB,EAAD,UACE,cAAC,EAAD,CAAUzC,OAAQkC,e,GAnCdQ,IAAMpB,WCITqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACT,cAAC,EAAD,IAEEC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ba74c401.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) {\r\n    throw new Error(\"Noooo\");\r\n  }\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder= 'Search Robots' \r\n            onChange={searchChange}\r\n            />\r\n\r\n        </div>   \r\n\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"2px solid black\",\r\n        height: \"800px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBounday extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1> Ooooops, That's not good!!</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBounday;\r\n","import React from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\n// import {robots} from './robots';\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../Components/Scroll.js\";\r\nimport ErrorBoundary from \"../Components/ErrorBoundary\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n  render() {\r\n    const filteredRobot = this.state.robots.filter((user) => {\r\n      return user.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchField.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1> Loading...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">My Bobos</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobot} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n<App />\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}